import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath "com.netflix.nebula:gradle-ospackage-plugin:8.5.1"
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'nebula.ospackage'

mainClassName = 'uk.co.ractf.polaris.cli.Main'

repositories {
    mavenCentral()
}

configurations {
    generateConfig
}

dependencies {
    implementation project(":polaris-api")
    implementation project(":polaris-apiclient")
    implementation "io.dropwizard:dropwizard-jackson:$dropwizardVersion"
    implementation "info.picocli:picocli:4.6.1"
    annotationProcessor "info.picocli:picocli-codegen:4.6.1"
    generateConfig "info.picocli:picocli-codegen:4.6.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': rootProject.version
        attributes 'Implementation-Vendor-Id': rootProject.group
        attributes 'Build-Time': ZonedDateTime.now(ZoneId.of("UTC"))
                .format(DateTimeFormatter.ISO_ZONED_DATE_TIME)
        attributes 'Built-By': InetAddress.localHost.hostName
        attributes 'Created-By': 'Gradle ' + gradle.gradleVersion
        attributes 'Main-Class': mainClassName
    }
    archiveName 'polaris-cli.jar'
}
